#+TITLE: Org-mode SC Demo 1
#+DATE: Thu, Apr  3 2014, 10:04 EEST
#+AUTHOR: IZ

* Simple Synths

Play with:

H-M-space:
H-M-n:
H-M-p:
H-space:

** ! WhiteNoise.ar
** ! GrayNoise.ar
** ! PinkNoise.ar
** ! SinOsc.ar(550)
** ! LPF.ar(LFPulse.ar(30.rrand (60).midicps), 500)
** LFPulse player 1
LPF.ar(LFPulse.ar(LFNoise0.kr(6).range(20, 40).midicps), LFNoise1.kr (12!2).range(500, 2000))
** ! LPF.ar(LFSaw.ar(LFNoise0.kr(8).range(30, 60).midicps), LFNoise1.kr (12!2).range(500, 800))
** ! Mix (SinOsc.ar(50.rrand (70) * (1..7), 0, 1/7) )
** ! Mix (SinOsc.ar(LFNoise0.kr (9).range (50, 70).midicps * (1..7), 0, 0.2 / (1..7)) )
** ! Mix (SinOsc.ar(LFNoise0.kr (10).range (50, 70).midicps * [1, 3, 5], 0, 0.2 / (1..3)) )
** 1, 3, 5, 7
Mix (SinOsc.ar(LFNoise0.kr (11).range (50, 70).midicps * [1, 3, 5, 7], 0, 0.2 / (1..4)) )
** Lower 1, 3, 5, 7
Mix (SinOsc.ar(LFNoise0.kr (12).range (30, 50).midicps * [1, 3, 5, 7], 0, 0.2 / (1..4)) )
* Patterns

Play with:

H-C-space:
H-C-n:
H-C-p:
H-space:

** Let the SynthTree create the PatternSynth and put it in its synth
p = [freq: (75..90).midicps.prand] +> pseq([Pseries(0.3, -0.01, 25), Pseries(0.01, 0.01, 25)]);
p +> \pattern1;

** As above, chaining chucks
[freq: (30 rrand: 75 .. rrand(40, 90)).midicps.prand]
+> ([Pseries(0.30, -0.01, 25), Pseries(0.01 * rrand(1, 5.0), 0.01, 25)]).pseq
+> \pattern1;

** Test pyramid
[freq: (50 rrand: 55 .. rrand(70, 80)).midicps
	.curdle(0.5).scramble.flop(4).flat.pyramid
	.pseq]
+> ((1..8)/16).pyramid.pseq
+> \pattern1;

** ! [freq: (40..80).midicps.prand] +> 0.1 +> \pattern1;

** ! [freq: (50..70).midicps.prand] +> Pstutter(3, Pbrown(0.05, 0.15, 0.05)) +> \pattern1;

** ! 500 -> \freq  +> \pattern1;

** ! ([500, 600]).prand -> \freq +> \pattern1;

** ! [500, 600, 700, 900].prand -> \freq +> \pattern1;

** Yemen?
[
	([500, 600, 550]).prand(15) * Pstutter(12, [0.5, 0.75, 0.8, 0.9, 1, 1.1].prand),
	[700, 800, 900].prand(10)
].prand -> \freq +> \pattern1;

** Use global duration
[freq: (40..80).midicps.prand, amp: { 0.01.exprand(0.1) }.pfunc] +> \pattern1;

** ! 0.1 pn: inf *> \dur; // go more slowly

** Cloud event examples

*** Dense cloud: 50 notes / sec
0.02 =!> \dur;
[freq: (40..90).midicps.prand] +> `\lpfsaw +> \pattern1;

*** Cloud slowly wandering
:PROPERTIES:
:DATE:     <2014-04-07 Mon 15:53>
:END:
[freq: Pwhite(
	Pstutter(10, Pbrown(40, 50, 1)),
	Pstutter(10, Pbrown(45, 90, 1))
).midicps ] +> `\lpfsaw +> \pattern1;

*** Changing instruments: Blocks
[freq: Pwhite(
	Pstutter(10, Pbrown(40, 50, 1)),
	Pstutter(10, Pbrown(45, 90, 1))
).midicps ] +>.i [
	Pstutter(Pbrown(1, 30, 1), \sine.pn(2)),
	Pstutter(Pbrown(1, 30, 2), \lpfpulse.pn(2))].prand +> \pattern1;
*** Changing instruments interweaving
0.02 =!> \dur;
[freq: Pwhite(
	Pstutter(5, Pbrown(40, 50, 1)),
	Pstutter(5, Pbrown(45, 90, 1))
).midicps ]
+>.i Pwrand([\lpfpulse, \sine, \lpfsaw],
	Pstutter(30, Pfunc({ Array.rand(3, 0.0, 1).normalizeSum })),
	inf)
+> \pattern1;

*** ! 0.1 =!> \dur; // Go more slowly

*** ! Pwhite(0.2, 3.2, inf) *> \legato;
*** ! Pwhite(0.01, 0.1, inf) *> \amp;
*** Pyramid amp: surging waves
pser(((0..20)/200).pyramid) *> \amp;
*** Brown motion amp
\amp -> Pbrown(0.01, 0.2, 0.02, inf) +> ~st;
*** ! ~st.legato = Pbrown(0.02, 1, 0.1, inf) * Pwrand([1, 15], [0.9, 0.1], inf);
